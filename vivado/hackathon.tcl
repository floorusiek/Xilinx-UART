#*****************************************************************************************
# Vivado (TM) v2024.2 (64-bit)
#
# hackathon.tcl: Tcl script for re-creating project 'hackathon'
#
# Generated by Vivado on Wed May 14 20:49:06 EEST 2025
# IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (hackathon.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../src/pl_controller.vhd"]"\
 "[file normalize "$origin_dir/../src/axi_mm_master.v"]"\
 "[file normalize "$origin_dir/../src/sync_fifo.sv"]"\
 "[file normalize "$origin_dir/../src/antenna.sv"]"\
 "[file normalize "$origin_dir/../src/bytes_counter.sv"]"\
 "[file normalize "$origin_dir/../src/task_parameters.svh"]"\
 "[file normalize "$origin_dir/../src/control.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_1/task_1.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_10/task_10.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_10_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_11/task_11.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_11_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_12/task_12.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_12_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_13/task_13.vhd"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_13_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_14/task_14.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_14_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_1_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_2/task_2.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_2_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_3/task_3.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_3_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_4/task_4.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_4_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_5/task_5.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_5_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_6/task_6.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_6_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_7/task_7.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_7_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_8/task_8.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_8_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/tasks/task_9/task_9.sv"]"\
 "[file normalize "$origin_dir/../src/task_wrappers/task_9_wrapper.sv"]"\
 "[file normalize "$origin_dir/../src/task_deserializer.sv"]"\
 "[file normalize "$origin_dir/../src/task_in.sv"]"\
 "[file normalize "$origin_dir/../src/task_latency_meas.sv"]"\
 "[file normalize "$origin_dir/../src/task_enabler_pkg.svh"]"\
 "[file normalize "$origin_dir/../src/task_manager.sv"]"\
 "[file normalize "$origin_dir/../src/task_out.sv"]"\
 "[file normalize "$origin_dir/../src/task_serializer.sv"]"\
 "[file normalize "$origin_dir/../src/control_wrapper.v"]"\
 "[file normalize "$origin_dir/../src/control_regs_S_AXI.v"]"\
 "[file normalize "$origin_dir/../src/reset_delay.v"]"\
 "[file normalize "$origin_dir/../src/control_regs.v"]"\
 "[file normalize "$origin_dir/../src/task_in_mask.sv"]"\
 "[file normalize "$origin_dir/../src/axis_data_width_converter.sv"]"\
 "[file normalize "$origin_dir/bd/design_1/design_1.bd"]"\
 "[file normalize "$origin_dir/../src/design_1_wrapper.v"]"\
 "[file normalize "$origin_dir/../tb/tb_defs.sv"]"\
 "[file normalize "$origin_dir/../tb/tb_top.sv"]"\
 "[file normalize "$origin_dir/../tb/tb_behav.wcfg"]"\
 "[file normalize "$origin_dir/../tb/task1.mem"]"\
 "[file normalize "$origin_dir/../tb/task1_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task2.mem"]"\
 "[file normalize "$origin_dir/../tb/task2_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task3.mem"]"\
 "[file normalize "$origin_dir/../tb/task3_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task4.mem"]"\
 "[file normalize "$origin_dir/../tb/task4_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task5.mem"]"\
 "[file normalize "$origin_dir/../tb/task5_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task6.mem"]"\
 "[file normalize "$origin_dir/../tb/task6_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task7.mem"]"\
 "[file normalize "$origin_dir/../tb/task7_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task8.mem"]"\
 "[file normalize "$origin_dir/../tb/task8_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task9.mem"]"\
 "[file normalize "$origin_dir/../tb/task9_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task10.mem"]"\
 "[file normalize "$origin_dir/../tb/task11.mem"]"\
 "[file normalize "$origin_dir/../tb/task11_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task12.mem"]"\
 "[file normalize "$origin_dir/../tb/task12_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task13.mem"]"\
 "[file normalize "$origin_dir/../tb/task13_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task14.mem"]"\
 "[file normalize "$origin_dir/../tb/task14_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/ip_repo/sources_1/ip/axi_vip_0/axi_vip_0.xci"]"\
 "[file normalize "$origin_dir/../tb/control_wrapper_tb.sv"]"\
 "[file normalize "$origin_dir/../tb/tb_defs.sv"]"\
 "[file normalize "$origin_dir/../tb/tb_lite.sv"]"\
 "[file normalize "$origin_dir/../tb/tb_lite.wcfg"]"\
 "[file normalize "$origin_dir/../tb/task1.mem"]"\
 "[file normalize "$origin_dir/../tb/task1_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task2.mem"]"\
 "[file normalize "$origin_dir/../tb/task2_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task3.mem"]"\
 "[file normalize "$origin_dir/../tb/task3_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task4.mem"]"\
 "[file normalize "$origin_dir/../tb/task4_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task5.mem"]"\
 "[file normalize "$origin_dir/../tb/task5_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task6.mem"]"\
 "[file normalize "$origin_dir/../tb/task6_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task7.mem"]"\
 "[file normalize "$origin_dir/../tb/task7_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task8.mem"]"\
 "[file normalize "$origin_dir/../tb/task8_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task9.mem"]"\
 "[file normalize "$origin_dir/../tb/task9_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task10.mem"]"\
 "[file normalize "$origin_dir/../tb/task11.mem"]"\
 "[file normalize "$origin_dir/../tb/task11_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task12.mem"]"\
 "[file normalize "$origin_dir/../tb/task12_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task13.mem"]"\
 "[file normalize "$origin_dir/../tb/task13_ref.mem"]"\
 "[file normalize "$origin_dir/../tb/task14.mem"]"\
 "[file normalize "$origin_dir/../tb/task14_ref.mem"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  set paths [list \
 "[file normalize "$origin_dir/[file normalize "$origin_dir/../src/he_ultrasonic_ndt"]"]"\
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

set env(LD_LIBRARY_PATH) ""

# Set the project name
set _xil_proj_name_ "hackathon"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "hackathon.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/hackathon"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xck26-sfvc784-2LV-c

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
set_msg_config  -string {{axis_data_width_converter.sv}}  -suppress  -ruleid {1}  -source 16
set_msg_config  -string {{ip/design_1_zynq_ultra_ps_e_0_0}}  -suppress  -ruleid {10}  -source 16
set_msg_config  -string {{in module zynq_ultra_ps_e_v3_5_5_zynq_ultra_ps_e is either unconnected or has no load}}  -suppress  -ruleid {11}  -source 16
set_msg_config  -string {{[Synth 8-6014] Unused sequential element */xpm/xpm_memory/hdl/xpm_memory.sv"}}  -suppress  -ruleid {12}  -source 16
set_msg_config  -string {{design_1_i/i_1/control_wrapper_0/\inst/control_0/task_manager_0 /task_in/fifo_in/xpm_fifo_base_inst/}}  -suppress  -ruleid {14}  -source 16
set_msg_config  -string {{design_1_i/i_1/control_wrapper_0/\inst/control_0/task_manager_0 /task_out/fifo_out/xpm_fifo_base_inst/}}  -suppress  -ruleid {15}  -source 16
set_msg_config  -string {{[Synth 8-6014] Unused sequential element gen_rd_b.gen_rd_b_synth_template.gen_nc_wide_reg.rd_sync.addrblsb_reg was removed.}}  -suppress  -ruleid {16}  -source 16
set_msg_config  -string {{/blk_mem_gen_0}}  -suppress  -ruleid {17}  -source 16
set_msg_config  -string {{design_1_axi_bram_ctrl_0_0}}  -suppress  -ruleid {18}  -source 16
set_msg_config  -string {{[Synth 8-6014] Unused sequential element gen_pntr_flags_cc.wrp_neq_rdp_pf_cc.gpe_cc_asym.rst_full_ff_reg1_reg was removed.}}  -suppress  -ruleid {19}  -source 16
set_msg_config  -string {{of module 'PS8'}}  -suppress  -ruleid {2}  -source 16
set_msg_config  -string {{[Synth 8-6014] Unused sequential element gen_pntr_flags_cc.wrp_neq_rdp_pf_cc.gpe_cc_asym.rst_full_ff_reg2_reg was removed.}}  -suppress  -ruleid {20}  -source 16
set_msg_config  -string {{[Synth 8-6014] Unused sequential element gen_pntr_flags_cc.wrp_neq_rdp_pf_cc.gpe_cc_asym.diff_pntr_pe_reg1_reg was removed.}}  -suppress  -ruleid {21}  -source 16
set_msg_config  -id {Opt 31-32}  -string {{WARNING: [Opt 31-32] Removing redundant IBUF since it is not being driven by a top-level port. design_1_i/clk_wiz_0/inst/clkin1_ibuf 
Resolution: The tool has removed redundant IBUF. To resolve this warning, check for redundant IBUF in the input design.}}  -suppress  -ruleid {22}  -source 8
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_ctl_pipe[1]_inferred:in0 to constant 0}}  -suppress  -ruleid {27}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_ctl_pipe[2]_inferred:in0 to constant 0}}  -suppress  -ruleid {28}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_ctl_pipe[3]_inferred:in0 to constant 0}}  -suppress  -ruleid {29}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_ctl_pipe[4]_inferred:in0 to constant 0}}  -suppress  -ruleid {30}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_ctl_pipe[5]_inferred:in0 to constant 0}}  -suppress  -ruleid {31}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_ctl_pipe[6]_inferred:in0 to constant 0}}  -suppress  -ruleid {32}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_ctl_pipe[7]_inferred:in0 to constant 0}}  -suppress  -ruleid {33}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_data_pipe[7]_inferred:in0}}  -suppress  -ruleid {34}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_data_pipe[6]_inferred:in0}}  -suppress  -ruleid {35}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_data_pipe[5]_inferred:in0}}  -suppress  -ruleid {36}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_data_pipe[4]_inferred:in0}}  -suppress  -ruleid {37}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_data_pipe[3]_inferred:in0}}  -suppress  -ruleid {38}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_data_pipe[2]_inferred:in0}}  -suppress  -ruleid {39}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_data_pipe[1]_inferred:in0}}  -suppress  -ruleid {40}  -source 16
set_msg_config  -string {{[Synth 8-3295] tying undriven pin trace_data_pipe[0]_inferred:in0}}  -suppress  -ruleid {41}  -source 16
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/s00_nodes/s00_aw_node/s_sc_payld'(170) to pin: '/s00_nodes/S_SC_AW_payld'(166) - Only lower order bits will be connected.}}  -suppress  -ruleid {43}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/s00_nodes/s00_ar_node/s_sc_payld'(170) to pin: '/s00_nodes/S_SC_AR_payld'(166) - Only lower order bits will be connected.}}  -suppress  -ruleid {44}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/s01_nodes/s01_ar_node/s_sc_payld'(170) to pin: '/s01_nodes/S_SC_AR_payld'(166) - Only lower order bits will be connected.}}  -suppress  -ruleid {45}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/s01_nodes/s01_aw_node/s_sc_payld'(170) to pin: '/s01_nodes/S_SC_AW_payld'(166) - Only lower order bits will be connected.}}  -suppress  -ruleid {46}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/m00_nodes/m00_b_node/s_sc_payld'(11) to pin: '/m00_nodes/S_SC_B_payld'(9) - Only lower order bits will be connected.}}  -suppress  -ruleid {47}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/m00_nodes/m00_r_node/s_sc_payld'(57) to pin: '/m00_nodes/S_SC_R_payld'(55) - Only lower order bits will be connected.}}  -suppress  -ruleid {48}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/m01_nodes/m01_b_node/s_sc_payld'(11) to pin: '/m01_nodes/S_SC_B_payld'(9) - Only lower order bits will be connected.}}  -suppress  -ruleid {49}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/m01_nodes/m01_r_node/s_sc_payld'(57) to pin: '/m01_nodes/S_SC_R_payld'(55) - Only lower order bits will be connected.}}  -suppress  -ruleid {50}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/m00_sc2axi/s_sc_ar_payld'(166) to pin: '/m00_nodes/M_SC_AR_payld'(170) - Only lower order bits will be connected.}}  -suppress  -ruleid {51}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/m00_sc2axi/s_sc_aw_payld'(166) to pin: '/m00_nodes/M_SC_AW_payld'(170) - Only lower order bits will be connected.}}  -suppress  -ruleid {58}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/m01_sc2axi/s_sc_ar_payld'(166) to pin: '/m01_nodes/M_SC_AR_payld'(170) - Only lower order bits will be connected.}}  -suppress  -ruleid {59}  -source 8
set_msg_config  -string {{design_1_smartconnect_1_0}}  -suppress  -ruleid {6}  -source 16
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/m01_sc2axi/s_sc_aw_payld'(166) to pin: '/m01_nodes/M_SC_AW_payld'(170) - Only lower order bits will be connected.}}  -suppress  -ruleid {60}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/s00_axi2sc/s_sc_b_payld'(9) to pin: '/s00_nodes/M_SC_B_payld'(11) - Only lower order bits will be connected.}}  -suppress  -ruleid {61}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/s00_axi2sc/s_sc_r_payld'(55) to pin: '/s00_nodes/M_SC_R_payld'(57) - Only lower order bits will be connected.}}  -suppress  -ruleid {62}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/s01_axi2sc/s_sc_b_payld'(9) to pin: '/s01_nodes/M_SC_B_payld'(11) - Only lower order bits will be connected.}}  -suppress  -ruleid {63}  -source 8
set_msg_config  -id {BD 41-2384}  -string {{WARNING: [BD 41-2384] Width mismatch when connecting pin: '/s01_axi2sc/s_sc_r_payld'(55) to pin: '/s01_nodes/M_SC_R_payld'(57) - Only lower order bits will be connected.}}  -suppress  -ruleid {64}  -source 8
set_msg_config  -string {{[Synth 8-7023] instance 'rst_clk_wiz_0_100M' of module 'design_1_rst_clk_wiz_0_100M_0' has 10 connections declared, but only 8 given}}  -suppress  -ruleid {66}  -source 16
set_msg_config  -string {{[Synth 8-6014] Unused sequential element gen_wr_a.gen_word_wide.wr_sync.addralsb_reg was removed.}}  -suppress  -ruleid {67}  -source 16
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/EXT_LPF/ACTIVE_LOW_EXT.ACT_LO_EXT/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {68}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/EXT_LPF/ACTIVE_LOW_EXT.ACT_LO_EXT/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {69}  -source 8
set_msg_config  -string {{'zynq_ultra_ps_e_v3_5_5_zynq_ultra_ps_e' is unconnected}}  -suppress  -ruleid {7}  -source 16
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/EXT_LPF/ACTIVE_LOW_EXT.ACT_LO_EXT/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {70}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/EXT_LPF/ACTIVE_LOW_EXT.ACT_LO_EXT/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {71}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/EXT_LPF/ACTIVE_LOW_EXT.ACT_LO_EXT/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d5) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {72}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/EXT_LPF/ACTIVE_LOW_EXT.ACT_LO_EXT/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d6) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {73}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/EXT_LPF/ACTIVE_LOW_AUX.ACT_LO_AUX/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d5) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {74}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/EXT_LPF/ACTIVE_LOW_AUX.ACT_LO_AUX/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d6) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {75}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/FDRE_inst) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {76}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/BSR_OUT_DFF[0].FDRE_BSR) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {77}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/PR_OUT_DFF[0].FDRE_PER) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {78}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (clk_map/psr_aclk/U0/ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N) is unused and will be removed from module bd_88fd.}}  -suppress  -ruleid {79}  -source 8
set_msg_config  -string {{'design_1_rst_clk_wiz_0_100M_0' is unconnected}}  -suppress  -ruleid {8}  -source 16
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (EXT_LPF/ACTIVE_LOW_EXT.ACT_LO_EXT/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d5) is unused and will be removed from module proc_sys_reset.}}  -suppress  -ruleid {80}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (EXT_LPF/ACTIVE_LOW_EXT.ACT_LO_EXT/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d6) is unused and will be removed from module proc_sys_reset.}}  -suppress  -ruleid {81}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (EXT_LPF/ACTIVE_HIGH_AUX.ACT_HI_AUX/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d5) is unused and will be removed from module proc_sys_reset.}}  -suppress  -ruleid {82}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (EXT_LPF/ACTIVE_HIGH_AUX.ACT_HI_AUX/GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d6) is unused and will be removed from module proc_sys_reset.}}  -suppress  -ruleid {83}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (FDRE_inst) is unused and will be removed from module proc_sys_reset.}}  -suppress  -ruleid {84}  -source 8
set_msg_config  -id {Synth 8-3332}  -string {{WARNING: [Synth 8-3332] Sequential element (BSR_OUT_DFF[0].FDRE_BSR) is unused and will be removed from module proc_sys_reset.}}  -suppress  -ruleid {85}  -source 8
set_msg_config  -id {Opt 31-32}  -string {{WARNING: [Opt 31-32] Removing redundant IBUF since it is not being driven by a top-level port. design_1_i/clk_wiz_0/inst/clkin1_ibuf Resolution: The tool has removed redundant IBUF. To resolve this warning, check for redundant IBUF in the input design.}}  -suppress  -ruleid {86}  -source 8
set_msg_config  -string {{hdl/axi_bram_ctrl_v4_1_rfs.vhd}}  -suppress  -ruleid {9}  -source 16


# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:kv260_som:part0:1.4" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "kv260_som" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "use_inline_hdl_ip" -value "1" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "79" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "90" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "90" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "90" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "90" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "90" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "701" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/../src/he_ultrasonic_ndt"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../src/pl_controller.vhd"] \
 [file normalize "${origin_dir}/../src/axi_mm_master.v"] \
 [file normalize "${origin_dir}/../src/sync_fifo.sv"] \
 [file normalize "${origin_dir}/../src/antenna.sv"] \
 [file normalize "${origin_dir}/../src/bytes_counter.sv"] \
 [file normalize "${origin_dir}/../src/task_parameters.svh"] \
 [file normalize "${origin_dir}/../src/control.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_1/task_1.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_10/task_10.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_10_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_11/task_11.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_11_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_12/task_12.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_12_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_13/task_13.vhd"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_13_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_14/task_14.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_14_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_1_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_2/task_2.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_2_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_3/task_3.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_3_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_4/task_4.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_4_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_5/task_5.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_5_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_6/task_6.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_6_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_7/task_7.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_7_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_8/task_8.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_8_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/tasks/task_9/task_9.sv"] \
 [file normalize "${origin_dir}/../src/task_wrappers/task_9_wrapper.sv"] \
 [file normalize "${origin_dir}/../src/task_deserializer.sv"] \
 [file normalize "${origin_dir}/../src/task_in.sv"] \
[file normalize "${origin_dir}/../src/task_in_mask.sv"] \
[file normalize "${origin_dir}/../src/axis_data_width_converter.sv"] \
 [file normalize "${origin_dir}/../src/task_latency_meas.sv"] \
 [file normalize "${origin_dir}/../src/task_enabler_pkg.svh"] \
 [file normalize "${origin_dir}/../src/task_manager.sv"] \
 [file normalize "${origin_dir}/../src/task_out.sv"] \
 [file normalize "${origin_dir}/../src/task_serializer.sv"] \
 [file normalize "${origin_dir}/../src/control_wrapper.v"] \
 [file normalize "${origin_dir}/../src/control_regs_S_AXI.v"] \
 [file normalize "${origin_dir}/../src/reset_delay.v"] \
 [file normalize "${origin_dir}/../src/control_regs.v"] \
 [file normalize "${origin_dir}/bd/design_1/design_1.bd"] \
 [file normalize "${origin_dir}/../src/design_1_wrapper.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../src/pl_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/antenna.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/bytes_counter.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_parameters.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../src/control.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_1/task_1.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_10/task_10.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_10_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_11/task_11.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_11_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_12/task_12.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_12_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_13/task_13.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_13_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_14/task_14.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_14_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_1_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_2/task_2.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_2_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_3/task_3.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_3_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_4/task_4.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_4_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_5/task_5.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_5_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_6/task_6.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_6_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_7/task_7.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_7_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_8/task_8.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_8_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/tasks/task_9/task_9.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_wrappers/task_9_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_deserializer.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_in.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_in_mask.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/axis_data_width_converter.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_latency_meas.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_enabler_pkg.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../src/task_manager.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_out.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/task_serializer.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../src/sync_fifo.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bd/design_1/design_1.bd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "registered_with_manager" -value "1" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/../tb/tb_defs.sv"] \
 [file normalize "${origin_dir}/../tb/tb_top.sv"] \
 [file normalize "${origin_dir}/../tb/tb_behav.wcfg"] \
 [file normalize "${origin_dir}/../tb/task1.mem"] \
 [file normalize "${origin_dir}/../tb/task1_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task2.mem"] \
 [file normalize "${origin_dir}/../tb/task2_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task3.mem"] \
 [file normalize "${origin_dir}/../tb/task3_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task4.mem"] \
 [file normalize "${origin_dir}/../tb/task4_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task5.mem"] \
 [file normalize "${origin_dir}/../tb/task5_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task6.mem"] \
 [file normalize "${origin_dir}/../tb/task6_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task7.mem"] \
 [file normalize "${origin_dir}/../tb/task7_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task8.mem"] \
 [file normalize "${origin_dir}/../tb/task8_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task9.mem"] \
 [file normalize "${origin_dir}/../tb/task9_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task10.mem"] \
 [file normalize "${origin_dir}/../tb/task11.mem"] \
 [file normalize "${origin_dir}/../tb/task11_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task12.mem"] \
 [file normalize "${origin_dir}/../tb/task12_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task13.mem"] \
 [file normalize "${origin_dir}/../tb/task13_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task14.mem"] \
 [file normalize "${origin_dir}/../tb/task14_ref.mem"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/../tb/tb_defs.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../tb/tb_top.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../tb/task1.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task1_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task2.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task2_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task3.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task3_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task4.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task4_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task5.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task5_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task6.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task6_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task7.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task7_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task8.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task8_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task9.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task9_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task10.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task11.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task11_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task12.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task12_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task13.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task13_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task14.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task14_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "sim_wrapper_top" -value "1" -objects $obj
set_property -name "top" -value "tb_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.compile.xvhdl.relax" -value "0" -objects $obj
set_property -name "xsim.compile.xvlog.relax" -value "0" -objects $obj
set_property -name "xsim.elaborate.debug_level" -value "all" -objects $obj
set_property -name "xsim.elaborate.rangecheck" -value "1" -objects $obj
set_property -name "xsim.elaborate.relax" -value "0" -objects $obj

# Create 'sim_lite' fileset (if not found)
if {[string equal [get_filesets -quiet sim_lite] ""]} {
  create_fileset -simset sim_lite
}

# Set 'sim_lite' fileset object
set obj [get_filesets sim_lite]
set files [list \
 [file normalize "${origin_dir}/../tb/ip_repo/sources_1/ip/axi_vip_0/axi_vip_0.xci"] \
 [file normalize "${origin_dir}/../tb/control_wrapper_tb.sv"] \
 [file normalize "${origin_dir}/../tb/tb_defs.sv"] \
 [file normalize "${origin_dir}/../tb/tb_lite.sv"] \
 [file normalize "${origin_dir}/../tb/tb_lite.wcfg"] \
 [file normalize "${origin_dir}/../tb/task1.mem"] \
 [file normalize "${origin_dir}/../tb/task1_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task2.mem"] \
 [file normalize "${origin_dir}/../tb/task2_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task3.mem"] \
 [file normalize "${origin_dir}/../tb/task3_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task4.mem"] \
 [file normalize "${origin_dir}/../tb/task4_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task5.mem"] \
 [file normalize "${origin_dir}/../tb/task5_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task6.mem"] \
 [file normalize "${origin_dir}/../tb/task6_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task7.mem"] \
 [file normalize "${origin_dir}/../tb/task7_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task8.mem"] \
 [file normalize "${origin_dir}/../tb/task8_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task9.mem"] \
 [file normalize "${origin_dir}/../tb/task9_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task10.mem"] \
 [file normalize "${origin_dir}/../tb/task11.mem"] \
 [file normalize "${origin_dir}/../tb/task11_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task12.mem"] \
 [file normalize "${origin_dir}/../tb/task12_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task13.mem"] \
 [file normalize "${origin_dir}/../tb/task13_ref.mem"] \
 [file normalize "${origin_dir}/../tb/task14.mem"] \
 [file normalize "${origin_dir}/../tb/task14_ref.mem"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_lite' fileset file properties for remote files
set file "$origin_dir/../tb/ip_repo/sources_1/ip/axi_vip_0/axi_vip_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../tb/control_wrapper_tb.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../tb/tb_defs.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../tb/tb_lite.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../tb/task1.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task1_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task2.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task2_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task3.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task3_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task4.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task4_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task5.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task5_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task6.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task6_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task7.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task7_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task8.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task8_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task9.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task9_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task10.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task11.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task11_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task12.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task12_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task13.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task13_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task14.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/../tb/task14_ref.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_lite] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj


# Set 'sim_lite' fileset file properties for local files
# None

# Set 'sim_lite' fileset properties
set obj [get_filesets sim_lite]
set_property -name "sim_wrapper_top" -value "1" -objects $obj
set_property -name "top" -value "tb_lite" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.compile.xvhdl.relax" -value "0" -objects $obj
set_property -name "xsim.compile.xvlog.relax" -value "0" -objects $obj
set_property -name "xsim.elaborate.debug_level" -value "all" -objects $obj
set_property -name "xsim.elaborate.rangecheck" -value "1" -objects $obj
set_property -name "xsim.elaborate.relax" -value "0" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xck26-sfvc784-2LV-c -flow {Vivado Synthesis 2023} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2023" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xck26-sfvc784-2LV-c -flow {Vivado Implementation 2023} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2023" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
